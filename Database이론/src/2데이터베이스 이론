TCL(Transaction Control Language)

트랜잭션 개요

트랜잭션은 데이터베이스의 논리적 연산단위이다.
트랜잭션이란 밀접히 관련되어 분리될 수 없는 한 개 이상의 데이터베이스
조작을 가리킨다.
하나의 트랜잭션에는 하나 이상의 sql문장이 포함된다
트랜잭션은 분할할 수 없는 최소의 단위이다. 그렇기 때문에 전부 적용하거나
전부 취소한다. 

트랜잭션의 특징
원자성(atomicity)
트랜잭션에서 정의된 연산자들은 모두 성공적으로 실행되던지 아니면
전혀 실행되지 않은 상태로 남아 있어야 한다

일관성(consistency)
트랜잭션이 실행되기 전의 데이터베이스 내용이 잘못 되어 있지 않다면
트랜잭션이 실행된 이후에도 데이터베이스의 내용에 잘못이 있으면 안 된다

고립성(isolation)
트랜잭션이 실행되는 도중에 다른 트랜잭션의 영향을 받아 잘못된 결과를 만들어서는
안된다.

지속성(durability)
트랜잭션이 성공적으로 수행되면 그 트랜잭션이 갱신한 데이터베이스의 내용은
영구적으로 저장된다

* 트랜잭션의 대상이 되는 sql문은 update, insert, delete등
데이터를 수정하는 DML문이다.



DDL(DATA DEFINITION LANGUAGE)
데이터 유형
자주 쓰이는 데이터 유형

CHARACTER(s)
-고정 길이 문자열 정보(ORACLE에서는 CHAR로 표현)
-s는 기본 길이 1바이트, 최대 길이 Oracle 2,000바이트
-s만큼 최대 길이를 갖고 고정 길이를 가지고 있으므로
할당된 변수 값의 길이가 s보다 작을 경우에는 그 차이 길이만큼
공간으로 채워진다

VARCHAR(s)
-CHARACTER VARYING의 약자로 가변 길이 문자열 정보(Oracle은 varchar2로 표현)
-s는 최소 길이 1바이트, 최대 길이 4,000바이트
-s만큼의 최대 길이를 갖지만 가변 길이로 조정이 되기 때문에 변수값의 
바이트만 적용된다(Limit 개념)

NUMERIC
-정수, 실수 등 숫자 정보(Oracle은 number로 표현)
-oracle은 처음에 전체 자리 수를 지정하고, 그 다음 소수 부분의 자리수를 
지정한다
예를 들어, 정수 부분이 6자리이고 소수점 부분이 2자리인 경우에는
number(8, 2)와 같이 된다
자릿수는 38자리 까지 가능

DATETIME
-날짜와 시각 정보 (Oracle은 date로 표현)
-Oracle은 1초 단위 관리

create table
테이블 선언문

create table 테이블이름(
	컬럼명1 datatype,
	컬럼명2 type,
	컬럼명3 type
);

테이블을 생성한다는 것은 테이블을 구성하는 컬럼들을 
정의하는 것이고 컬럼을 정의하려면 컬럼은 이름은 물론이고
해당 컬럼에 어떠한 데이터가 저장되어야 하는지도 정의해야 한다

테이블 생성시 주의할 규칙
-테이블명은 객체를 의미할 수 있는 적절한 이름을 사용한다.
	가능한 단수형을 권고한다
-테이블명은 다른 테이블의 이름과 중복되지 않아야 한다
-한 테이블 내에서는 컬럼명이 중복되게 지정될 수 없다
-테이블 이름을 지정하고 각 컬럼들은 괄호로 묶어 지정한다
-각 컬럼들은 콤마 ","로 구분되고, 테이블 생성문의 끝은 항상 
세미콜론 ";"으로 끝난다
-컬럼에 대해서는 다른 테이블까지 고려하여 데이터베이스 내에서는
일관성 있게 사용하는 것이 좋다(표준화)
-컬럼 뒤에 데이터 유형은 꼭 지정되어야 한다
-테이블명과 컬럼명은 반드시 문자로 시작해야 하고
	벤더별로 길이에 대한 한계가 있다
-벤더에서 사전에 정의한 예약어는 쓸 수 없다
- A~Z, a~z, 0~9, _, $, # 문자만 허용된다

-테이블명이 잘못된 사례
10_player : 반드시 숫자가 아닌 문자로 시작되어야 한다
T-PLAYER : 특수 문자 '-'는 허용되지 않음
STUDENTNAME x
studentname x
studentName x
student_Name   파스칼 표기법

-테이블 생성시 대/소문자 구분은 하지 않는다
	기본적으로 테이블이나 컬럼명은 대문자로 만들어진다




테이블 구조를 변경하는 ALTER TABLE문
한 번 생성된 테이블의 구조를 변경하기 위한 DDL 명령문이다
테이블에 대한 구조 변경은 컬럼의 추가, 삭제, 컬럼의 타입이나
길이를 변경할 때 사용된다.
테이블의 구조를 변경하면 기존 데이터에 영향을 주게 된다

기존 테이블에 새로운 컬럼을 추가한다
alter table table_name 
add(추가할 컬럼명 데이터 유형);


기존 컬럼 속성 변경하기
형식
alter table 테이블명
modify(컬럼명1 데이터유형, 컬럼명2 데이터유형, ,,,);

주의사항
-해당 컬럼에 자료가 없는 경우
컬럼의 데이터 타입을 변경할 수 있다
컬럼의 크기를 변경할 수 있다

-해당 컬럼에 자료가 있는 경우
컬럼의 데이터 타입을 변경할 수 없다
크기를 늘릴 수는 있지만 현재 가지고 있는 데이터의 
크기보다 작은 크기로 변경할 수 없다



기존 컬럼 삭제하기
형식
alter table 테이블명
drop column 삭제할 컬럼명;


테이블 삭제하기
형식
drop table 테이블명;

테이블명을 변경하는 rename문
형식
rename old_name to new_name;


DML
테이블에 새로운 행을 추가하는 insert문

신입 사원이 입사했다면 이 사원의 정보를 사원 테이블에 추가해야 한다
테이블에 새로운 행을 추가할 때 사용하는 sql문이 insert문이다

형식
insert into 테이블명
value(컬럼명1, 컬럼명2, ,,,)
values('value1', 'value2', ,,,);

insert into 테이블명
(컬럼명1, 컬럼명2, ,,,)
values('value1', 'value2', ,,,);

컬럼명을 생략한 경우 무조건 모든 컬럼의 갯수만큼 순서에 맞게
값을 입력해야 한다
insert into 테이블명
values('value1', 'value2', ,,,);



해당 컬럼명과 입력값이 서로 1:1 매핑해야 한다




테이블의 내용을 수정하기 위한 update문
데이터를 수정할 때 사용

형식
update table_name
set 컬럼명1 = 밸류, 컬럼명2 = 밸류2, ,,,,;


테이블의 불필요한 행을 삭제하는 delete문

형식
delete from 테이블명;

WHERE절
WHERE절이란? 조건문이다

delete from dept
where dname = 'SALES';




트랜잭션 스토리

이영빈이가 돈 10000원을 가지고 있다

영빈이는 돈의 10%를 항상 적금으로 넣고 있다


트랜잭션
Commit과 Rollback

커밋(commit)
commit는 모든 작업을 정상적으로 처리하겠다고 확정하는 명령어다
트랜잭션의 처리 과정을 데이터베이스에 반영하기 위해서는 변경된 내용을
모두 영구 저장해야 한다
commit 명령어를 수행하면 하나의 트랜잭션 과정을 종료하게 된다

입력한 자료나 수정한 자료에 대해서 또는 삭제한 자료에 대해서
전혀 문제가 없다고 판단되었을 경우 commit 명령어를 통해서
트랜잭션을 완료할 수 있다

commit이나 rollback 이전의 데이터 상태는 다음과 같다
-단지 메모리 buffer에만 영향을 받았기 때문에
	데이터의 변경 이전 상태로 복구가 가능하다
-현재 사용자는 select 문장으로 결과를 확인 가능하다
-다른 사용자는 현재 사용자가 수행한 명령의 결과를 볼 수 없다
-변경된 행은 잠금(locking)이 설정되어서 다른 사용자가 변경할 수 없다

commit 이후의 데이터 상태는 다음과 같다
-데이터에 대한 변경 사항이 데이터베이스에 반영된다
-이전 데이터는 영원히 잃어버리게 된다
-모든 사용자는 결과를 볼 수 있다
-관련된 행에 대한 잠금이 풀리고, 다른 사용자들이 
행을 조작할 수 있게 된다


롤백(rollback)
테이블 내 입력한 데이터나, 수정한 데이터, 삭제한 데이터에 대하여
commit 이전에는 변경사항을 취소할 수 있는데 데이터베이스에서는
rollback 기능을 사용한다
롤백은 데이터 변경 사항이 취소되어 데이터의 이전 상태로 복구되며,
관련된 행에 대한 잠금이 풀리고 다른 사용자들이 데이터를 변경할 수 있게 된다



트랜잭션 스토리2
영희는 2만원을 가지고 있다

영희는 자신의 돈에서 10000원을 영빈이에게 줬다

영희는 card에 5000원이 있다

영희는 card에서 이자로 100원을 얻었다

영빈이는 영희가 돈을 줘서 고마움에 자신의 카드에
영희에게 받은 모든 돈을 카드에 입금했다


 





































