
부서별로 가장 급여를 많이 받는 사원의 정보를 출력하시오
부서번호가 높은순으로 

사원번호	사원명	급여		부서번호


직급(JOB)이 MANAGER인 사람이 속한 부서의 
부서 번호와 부서명과 지역을 출력하시오
DEPTNO		DNAME		LOC



SELECT DEPTNO, dname, loc
from dept
where deptno in (SELECT deptno
                from emp
                where job = 'MANAGER');
                

SELECT d.DEPTNO, d.dname, d.loc
from dept d, emp e
where e.deptno = d.deptno
and e.job  = 'MANAGER';



그 밖에 위치에서 사용하는 서브쿼리

SELECT 절에 서브쿼리 사용하기

SELECT 절에서 사용하는 서브쿼리인 스칼라 서브쿼리(SCALAR SUBQUERY)

스칼라 서브쿼리는 한 행, 한 컬럼만을 반환하는 서브쿼리를 말한다



선수 정보와 해당 선수가 속한 팀의 평균 키를 함께 출력하시오
선수명		키		소속팀의 평균키




FROM 절에서 서브쿼리 사용하기
학문에서는 이를 인라인 뷰(INLINE VIEW)라고 한다

서브쿼리가 FROM 절에 사용되면 어떻게 될까?
서브쿼리의 결과가 마치 실행 시에 동적으로 생성된 테이블인 것처럼 
사용할 수 있다
**
인라인 뷰는 SQL문이 실행될 때만 임시적으로 생성되는 
동적인 뷰이기 때문에 데이터베이스에 해당 정보가 저장되지 않는다
그래서 일반적인 뷰를 정적 뷰(STATIC VIEW)라고 하고
인라인 뷰를 동적 뷰(DYNAMIC VIEW)라고도 한다

인라인 뷰는 테이블 명이 올 수 있는 곳에서 사용할 수 있다




인라인 뷰로만 해결하시오
사원 중에 가장 오래 다닌 직원부터 차례되로 출력하시오
EMPNO	ENAME		HIREDATE



K리그 선수들 중에서 포지션이 미드필더(MF)인 선수들의
소속팀명 및 선수 정보를 출력하고자 한다
인라인 뷰를 활용해서 SQL문을 작성하시오
정렬은 선수명이 빠른 순으로 한다

팀명		선수명		백넘버	

162



TOP-N 개념, 쿼리 -> 등급, 랭크


사원들 중에 급여를 가장 많이 받는 사원을 순서대로 3명만 출력하시오
모든 컬럼 출력 -> 회사에서는 * 피한다 없다라고 봐도 좋다

ROWNUM



선수들 중에서 키가 널이 아닌 선수들 중에
키가 가장 큰 순으로 5명의 선수들의 정보를 출력하시오

선수명	포지션	키	



VIEW(뷰)
테이블은 실제로 가지고 있는 반면
뷰는 실제 데이터를 가지고 있지 않다
뷰는 단지 뷰 정의(VIEW DEFINITION)만을 가지고 있다
질의에서 뷰가 사용되면 뷰 정의를 참조해서 DBMS 내부적으로
질의를 재작성하여 질의를 수행한다
뷰는 실제 데이터를 가지고 있지 않지만 테이블이 수행하는 
역할을 수행하기 때문에 가상 테이블(VIRTUAL TABLE)이라고도 한다

뷰 사용의 장점
독립성		테이블 구조가 변경되어도 뷰를 사용하는 응용 프로그램은
			변경하지 않아도 된다
			
편리성		복잡한 질의를 뷰로 생성함으로써 관련 질의를 단순하게
			작성할 수 있다. 또한 해당 형태의 SQL문을 자주
			사용할 때 뷰를 이용하면 편리하게 사용할 수 있다
보안성		직원의 급여정보와 같이 숨기고 싶은 정보가 존재한다면,
			뷰를 생성할 때 해당 컬럼을 빼고 생성함으로써 사용자에게
			정보를 감출 수 있다
			
			
뷰를 사용하는 이유
뷰를 사용하는 이유는 복잡하고 긴 쿼리문을 뷰로 정의하면 
접근을 단순화할 수 있고 보안에 유리하기 때문이다
			

			
형식
CREATE VIEW 뷰이름
AS 
SELECT 문장;

권한이 불충분 하다라고 뜬다면?
GRANT CREATE VIEW TO SCOTT;



각 부서별 총급여 합계와 총급여 평균을 부서번호가 높은 순으로 
VIEW를 생성하시오

DEPTNO		SalSum		SalAvg




프로시저(procedure)
개발자가 자주 실행해야 하는 로직을 절차적인 언어를 
이용하여 작성한 프로그램 모듈이다
필요할 때 호출하여 실행할 수 있다

오라클은 사용자가 만든 PL/SQL문을 
데이터베이스에 저장할 수 있도록 
프로시저라는 것을 제공한다

형식
create OR REPLACE PROCEDURE 프로시저명(argument1 data_type, 
argument2 data_type, ,,,)

IS
	LOCAL_VARIABLE DECLARATION
BEGIN
	STATEMENT1;
	STATEMENT2;
	,,,
EXCEPTION
	,,,
END;
/
	
	
	
7369	SMITH	800	CLERK
7499	ALLEN	1600	SALESMAN
7521	WARD	1250	SALESMAN
7566	JONES	2975	MANAGER
7654	MARTIN	1250	SALESMAN
7698	BLAKE	2850	MANAGER
7782	CLARK	2450	MANAGER
7839	KING	5000	PRESIDENT
7844	TURNER	1500	SALESMAN
7900	JAMES	950		CLERK
7902	FORD	3000	ANALYST
7934	MILLER	1300	CLERK
7935    				
7936
7937	
	
시퀀스의 개념과 시퀀스 생성
순서적인?

오라클에서는 행을 구분하기 위해 기본 키를 두고 있다
기본 키는 중복된 값을 가질 수 없으므로 
항상 유일한 값을 가져야 한다
기본키가 유일한 값을 갖도록 사용자가 직접 값을 
생성하려면 부담이 클 것이다
시퀀스는 테이블 내의 유일한 숫자를 자동으로 생성하는
자동 번호 발생기이므로 시퀀스를 기본 키로 사용하면
사용자의 부담을 줄일 수 있다

EXPRESSION
CREATE SEQUENCE 시퀀스명
START WITH 1    시퀀스 번호의 시작값을 지정할 때 사용한다    
INCREMENT BY    연속적인 시퀀스의 번호의 증가치를 지정할 때 사용한다
MINVALUE 1		시퀀스가 가질 수 있는 최소값을 설정한다
MAXVALUE 100	시퀀스가 가질 수 있는 최대값을 지정한다
등등;

유일값을 얻는 방법??????
1씩 증가한다
절대 숫자는 내려가지 않는다













	
	











형변환
트랜잭션 
시퀀스
인덱스



PL/SQL


프로시저
트리거
함수

패키지




시험 3개 과목

작성
1. 오라클, 안시 조인

2. DML 적재 적소 사용



활용
1. 테이블 생성


2. VIEW 를 생성하시오
수업 한다




응용
1. 프로시저 생성
서술형

비워있는 칸을 완성해라


2. 
상위 몇 명 구하기


3.
권한

단답형

























